'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ReactInterval = undefined;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ReactInterval = exports.ReactInterval = _react2.default.createClass({
  displayName: 'ReactInterval',

  propTypes: {
    callback: _react2.default.PropTypes.func.isRequired,
    enabled: _react2.default.PropTypes.bool,
    timeout: _react2.default.PropTypes.number
  },

  getDefaultProps: function getDefaultProps() {
    return {
      enabled: false,
      timeout: 1000
    };
  },
  componentDidMount: function componentDidMount() {
    if (this.props.enabled) {
      this.start();
    }
  },
  shouldComponentUpdate: function shouldComponentUpdate(_ref) {
    var timeout = _ref.timeout;
    var callback = _ref.callback;
    var enabled = _ref.enabled;

    return this.props.timeout !== timeout || this.props.callback !== callback || this.props.enabled !== enabled;
  },
  componentDidUpdate: function componentDidUpdate(_ref2) {
    var enabled = _ref2.enabled;

    if (this.props.enabled !== enabled) {
      if (this.props.enabled) {
        this.start();
      } else {
        this.stop();
      }
    }
  },
  componentWillUnmount: function componentWillUnmount() {
    this.stop();
  },
  callback: function callback() {
    if (this.timer) {
      this.props.callback();
      this.start();
    }
  },
  start: function start() {
    this.stop();
    this.timer = setTimeout(this.callback, this.props.timeout);
  },
  stop: function stop() {
    clearTimeout(this.timer);
    this.timer = null;
  },
  render: function render() {
    return false;
  }
});
//# sourceMappingURL=Component.js.map