{"version":3,"sources":["../src/Component.js"],"names":["ReactInterval","createClass","propTypes","callback","PropTypes","func","isRequired","enabled","bool","timeout","number","getDefaultProps","componentDidMount","props","start","shouldComponentUpdate","componentDidUpdate","stop","componentWillUnmount","timer","setTimeout","clearTimeout","render"],"mappings":";;;;;;;AAAA;;;;;;AAGO,IAAMA,wCAAgB,gBAAMC,WAAN,CAAkB;AAAA;;AAC7CC,aAAW;AACTC,cAAU,gBAAMC,SAAN,CAAgBC,IAAhB,CAAqBC,UADtB;AAETC,aAAS,gBAAMH,SAAN,CAAgBI,IAFhB;AAGTC,aAAS,gBAAML,SAAN,CAAgBM;AAHhB,GADkC;;AAQ7CC,iBAR6C,6BAQ3B;AAChB,WAAO;AACLJ,eAAS,KADJ;AAELE,eAAS;AAFJ,KAAP;AAID,GAb4C;AAgB7CG,mBAhB6C,+BAgBzB;AAClB,QAAI,KAAKC,KAAL,CAAWN,OAAf,EAAwB;AACtB,WAAKO,KAAL;AACD;AACF,GApB4C;AAuB7CC,uBAvB6C,uCAuBO;AAAA,QAA7BN,OAA6B,QAA7BA,OAA6B;AAAA,QAApBN,QAAoB,QAApBA,QAAoB;AAAA,QAAVI,OAAU,QAAVA,OAAU;;AAClD,WACE,KAAKM,KAAL,CAAWJ,OAAX,KAAuBA,OAAvB,IACA,KAAKI,KAAL,CAAWV,QAAX,KAAwBA,QADxB,IAEA,KAAKU,KAAL,CAAWN,OAAX,KAAuBA,OAHzB;AAKD,GA7B4C;AAgC7CS,oBAhC6C,qCAgCf;AAAA,QAAVT,OAAU,SAAVA,OAAU;;AAC5B,QAAI,KAAKM,KAAL,CAAWN,OAAX,KAAuBA,OAA3B,EAAoC;AAClC,UAAI,KAAKM,KAAL,CAAWN,OAAf,EAAwB;AACtB,aAAKO,KAAL;AACD,OAFD,MAEO;AACL,aAAKG,IAAL;AACD;AACF;AACF,GAxC4C;AA2C7CC,sBA3C6C,kCA2CtB;AACrB,SAAKD,IAAL;AACD,GA7C4C;AAgD7Cd,UAhD6C,sBAgDlC;AACT,QAAI,KAAKgB,KAAT,EAAgB;AACd,WAAKN,KAAL,CAAWV,QAAX;AACA,WAAKW,KAAL;AACD;AACF,GArD4C;AAwD7CA,OAxD6C,mBAwDrC;AACN,SAAKG,IAAL;AACA,SAAKE,KAAL,GAAaC,WAAW,KAAKjB,QAAhB,EAA0B,KAAKU,KAAL,CAAWJ,OAArC,CAAb;AACD,GA3D4C;AA8D7CQ,MA9D6C,kBA8DtC;AACLI,iBAAa,KAAKF,KAAlB;AACA,SAAKA,KAAL,GAAa,IAAb;AACD,GAjE4C;AAoE7CG,QApE6C,oBAoEpC;AACP,WAAO,KAAP;AACD;AAtE4C,CAAlB,CAAtB","file":"Component.js","sourcesContent":["import React from 'react';\n\n\nexport const ReactInterval = React.createClass({\n  propTypes: {\n    callback: React.PropTypes.func.isRequired,\n    enabled: React.PropTypes.bool,\n    timeout: React.PropTypes.number\n  },\n\n\n  getDefaultProps() {\n    return {\n      enabled: false,\n      timeout: 1000\n    };\n  },\n\n\n  componentDidMount() {\n    if (this.props.enabled) {\n      this.start();\n    }\n  },\n\n\n  shouldComponentUpdate({timeout, callback, enabled}) {\n    return (\n      this.props.timeout !== timeout ||\n      this.props.callback !== callback ||\n      this.props.enabled !== enabled\n    );\n  },\n\n\n  componentDidUpdate({enabled}) {\n    if (this.props.enabled !== enabled) {\n      if (this.props.enabled) {\n        this.start();\n      } else {\n        this.stop();\n      }\n    }\n  },\n\n\n  componentWillUnmount() {\n    this.stop();\n  },\n\n\n  callback() {\n    if (this.timer) {\n      this.props.callback();\n      this.start();\n    }\n  },\n\n\n  start() {\n    this.stop();\n    this.timer = setTimeout(this.callback, this.props.timeout);\n  },\n\n\n  stop() {\n    clearTimeout(this.timer);\n    this.timer = null;\n  },\n\n\n  render() {\n    return false;\n  }\n});\n"]}